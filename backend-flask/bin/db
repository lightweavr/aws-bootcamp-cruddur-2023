#!/bin/bash

function connect() {
    psql "$1"
}

function create() {
    psql "$1" -c "CREATE database cruddur;"
}

function drop() {
    psql "$1" -c "DROP DATABASE IF EXISTS cruddur;"
}

function schema() {
    schema_path="$(realpath $(dirname $(realpath "${BASH_SOURCE[0]}"))/../db/schema.sql)"
    echo Loading schema from "$schema_path"
    psql "$1" cruddur < "$schema_path"
}

function seed() {
    seed_path="$(realpath $(dirname $(realpath "${BASH_SOURCE[0]}"))/../db/seed.sql)"
    echo Loading seed data from "$seed_path"
    psql "$1" cruddur < "$seed_path"
}

function sessions() {
    psql "$1" -c "select pid as process_id, \
        usename as user,  \
        datname as db, \
        client_addr, \
        application_name as app,\
        state \
        from pg_stat_activity;"
}

if { [ -z "${PROD_CONNECTION_URL}" ] && [ "$1" = "-p" ]; } || { [ -z "${CONNECTION_URL}" ] && [ "$1" != "-p" ]; }; then
    echo Expecting either PROD_CONNECTION_URL to be set with -p, or CONNECTION_URL. Don\'t know what URL to use, exiting
    exit 1
fi

# Check if we were passed -p for production
if [ "$1" = "-p" ]; then
  echo "Running in production mode"
  URL=$PROD_CONNECTION_URL
  shift # drop the first parameter - "-p"
else
  URL=$CONNECTION_URL
fi

NO_DB_CONNECTION_URL=$(sed 's/\/cruddur//g' <<<"$CONNECTION_URL")

CYAN='\033[1;36m'
NO_COLOR='\033[0m'

# get parameter
PARAM=$1
printf "Running ${CYAN}%s${NO_COLOR}\n" "${PARAM}"

# switch case to select function
case $PARAM in
    "connect"|"c") connect "$URL" ;;
    "create") create "$NO_DB_CONNECTION_URL" ;;
    "drop") drop "$NO_DB_CONNECTION_URL" ;;
    "schema") schema "$URL" ;;
    "seed") seed "$URL" ;;
    "sessions") sessions "$URL" ;;

    "setup"|"init")
        drop "$NO_DB_CONNECTION_URL"
        create "$NO_DB_CONNECTION_URL"
        schema "$URL"
        seed "$URL" ;;
    *) echo "Invalid parameter" ;;
esac
