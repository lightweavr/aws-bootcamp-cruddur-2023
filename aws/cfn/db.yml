AWSTemplateFormatVersion: 2010-09-09
Description: |
  The primary Postgres RDS Database for the application
  - RDS Instance
  - Database Security Group
  - DBSubnetGroup

Parameters:
  NetworkingStack:
    Type: String
    Description: This is our base layer of networking components eg. VPC, Subnets
    Default: Cruddurnetworking
  BackendStack:
    Type: String
    Description: This is our FargateCluster
    Default: Cruddurbackend
  BackupRetentionPeriod:
    Type: Number
    Default: 35
  DBInstanceClass:
    Type: String
    Default: db.t4g.micro
  DBName:
    Type: String
    Default: cruddur
  DeletionProtection:
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  EngineVersion:
    Type: String
    #  DB Proxy only supports very specific versions of Postgres
    #  https://stackoverflow.com/questions/63084648/which-rds-db-instances-are-supported-for-db-proxy
    Default: "15.2"
  MasterUsername:
    Type: String
    Default: postgres
Resources:
  DatabaseSG:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}DatabaseSG"
      GroupDescription: Allow DB access from ECS Cluster Tasks
      VpcId:
        Fn::ImportValue: !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub "${BackendStack}ServiceSGId"
          FromPort: 5432
          ToPort: 5432
          Description: Default Postgres Port
  DBSubnetGroup:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub "${AWS::StackName}DBSubnetGroup"
      DBSubnetGroupDescription: !Sub "${AWS::StackName}DBSubnetGroup"
      # Using the public subset so we can connect to the database without going through a bastion
      SubnetIds:
        Fn::Split:
          - ","
          - Fn::ImportValue: !Sub "${NetworkingStack}PublicSubnetIds"

  Database:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html
    Type: AWS::RDS::DBInstance
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html
    DeletionPolicy: "Snapshot"
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html
    UpdateReplacePolicy: "Snapshot"
    Properties:
      Engine: postgres
      EngineVersion: !Ref EngineVersion
      AllocatedStorage: 20
      StorageType: gp3
      StorageEncrypted: true
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      DBInstanceClass: !Ref DBInstanceClass
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeletionProtection: !Ref DeletionProtection
      EnablePerformanceInsights: true
      EnableIAMDatabaseAuthentication: true

      # Must be 1 to 63 letters or numbers.
      # First character must be a letter.
      # Can't be a reserved word for the chosen database engine.
      MasterUsername: !Ref MasterUsername
      # Constraints: Must contain from 8 to 128 characters.
      MasterUserPassword: "{{resolve:ssm-secure:/cruddur/db/password}}"
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !GetAtt DatabaseSG.GroupId
  DatabaseEndpointParameter:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cruddur/db/endpoint
      Type: String
      Description: Endpoint for Cruddur RDS instance
      Value: !GetAtt Database.Endpoint.Address
  DatabaseUserParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cruddur/db/user
      Type: String
      Description: Username for Cruddur RDS instance
      Value: !Ref MasterUsername
