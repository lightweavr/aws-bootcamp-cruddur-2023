---
version: "3.8"
# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks:
  cruddur-net:
    driver: bridge
    name: cruddur-net
services:
  backend-flask:
    env_file:
      - backend-flask.env
    build:
      context: ./backend-flask
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - 4567:4567
    depends_on:
      - xray-daemon
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "-O/dev/null",
          "http://127.0.0.1:4567/api/health-check",
          "--header",
          "Accept: application/json",
          "--header",
          "Content-Type: application/json"
        ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 15s
    volumes:
      - type: bind
        source: ./backend-flask
        target: /backend-flask
        read_only: true
    networks:
      - cruddur-net
  frontend-react-js:
    env_file:
      - frontend-react-js.env
    build: ./frontend-react-js
    container_name: frontend
    ports:
      - 3000:3000
    depends_on:
      - backend-flask
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "-O/dev/null",
          "http://127.0.0.1:3000"
        ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 15s
    volumes:
      - type: bind
        source: ./frontend-react-js/src
        target: /frontend-react-js/src
        read_only: true
    networks:
      - cruddur-net
  # db:
  #   image: postgres:13-alpine
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   container_name: db
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - type: bind
  #       source: /workspace/docker/psqldb
  #       target: /var/lib/postgresql/data
  #   networks:
  #     - cruddur-net
  # dynamodb:
  #   # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
  #   # We needed to add user:root to get this working.
  #   user: root
  #   command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data
  #   image: amazon/dynamodb-local:latest
  #   restart: unless-stopped
  #   container_name: dynamodb
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - type: bind
  #       source: /workspace/docker/dynamodb
  #       target: /home/dynamodblocal/data
  #   working_dir: /home/dynamodblocal
  #   networks:
  #     - cruddur-net
  xray-daemon:
    hostname: xray-daemon
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "${AWS_DEFAULT_REGION}"
    command:
      - "xray -o -b xray-daemon:2000"
    ports:
      - 2000:2000/udp
    networks:
      - cruddur-net
