vscode:
  extensions:
    - cweijan.vscode-postgresql-client2
    - ms-azuretools.vscode-docker

tasks:
  - env:
      dir: /workspace
    init: |
      mkdir -p $dir/aws-cli
      mkdir -p $dir/aws-sam
      mkdir -p $dir/bin
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
      tempdir=$(mktemp -d)
      unzip /tmp/awscliv2.zip -d $tempdir/
      rm -f /tmp/awscliv2.zip
      $tempdir/aws/install -i $dir/aws-cli -b $dir/bin --update
      curl -L "https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip" -o /tmp/awssam.zip
      tempdir=$(mktemp -d)
      unzip /tmp/awssam.zip -d $tempdir/
      $tempdir/install -i $dir/aws-sam -b $dir/bin --update
      pip install cfn-lint
      pip install -r backend-flask/requirements-dev.txt
      npm install aws-cdk -g
      git clone https://github.com/python/typeshed.git /workspace/typeshed --depth 1 -q
    command: |
      complete -C '/workspace/bin/aws_completer' aws
      export PATH=/workspace/bin:/workspace/aws-bootcamp-cruddur-2023/bin:$PATH
      /workspace/aws-bootcamp-cruddur-2023/bin/update-sg-rule
      /workspace/aws-bootcamp-cruddur-2023/bin/ecs login
      clear
  - name: install-postgres-client
    command: |
      curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
      echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
      sudo apt update
      sudo apt install -y postgresql-client-15 libpq-dev
      exit
  - name: Setup db storage directories
    command: |
      mkdir -p /workspace/docker/dynamodb
      mkdir -p /workspace/docker/psqldb
      exit
  - name: Setup environment files
    command: |
      $GITPOD_REPO_ROOT/bin/generate-env backend
      $GITPOD_REPO_ROOT/bin/generate-env frontend
      exit
  - name: Setup CDK requirements
    command: |
      cd $GITPOD_REPO_ROOT/thumbing-serverless-cdk
      npm i --include=dev
      exit
ports:
  - name: frontend
    port: 3000
    onOpen: open-browser
    visibility: public
  - name: backend
    port: 4567
    onOpen: ignore
    visibility: public
  - name: pgsql
    port: 5432
    onOpen: ignore
    visibility: private
  - name: ddb
    port: 8000
    onOpen: ignore
    visibility: private
